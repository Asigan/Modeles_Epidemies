package exploitation;

import java.io.IOException;
import java.util.Scanner;

import Modeles.*;
/**
 * Classe faisant la gestion de l'interface console et du flux des actions
 * @author titouan
 *
 */
public class App {
	static Scanner scan;
	static Parametres param = Parametres.getInstance();
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		scan = new Scanner(System.in);
		
		try {
			param.genererFichierSiNonExistant("param.txt");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try{
			param.setParametresAvecFichier("param.txt");
		}
		catch(ParamException e) {
			System.out.println("Le fichier param.txt semble être corrompu");
			String form = "Voulez-vous régénérer automatiquement le fichier de paramètres (avec les paramètres par défaut) ?\n 1 - Oui\n 2- Non\n";
			int res = getIntInputBetween(1,2,form);
			if(res==1) {
				regenerateFile();
				param.setParametresAvecFichier("param.txt");
			}
		}
		int choix = 0;
		while(choix !=3) {
			choix = home();
			if(choix==1) {
				
				Modele usedModele = homeSimulation();

				if(usedModele!=null) {
					int choiceContinue = 0;
					while(choiceContinue!=3) {
						String form = "Voulez vous modifier les paramètres ?\n 1 - Oui\n 2 - Non\n";
						int changeParameters = getIntInputBetween(1, 2, form);
						if(changeParameters ==1) {
							changeParameters();
							if(choiceContinue!=1)
								usedModele = usedModele.reinit();
						}
						form = "Combien de jours doit durer la simulation (de 1 à 1000)?\n";
						int nbJours = getIntInputBetween(1, 1000, form);
						for(int i=0; i<=nbJours; i++) {
							usedModele.unJour();
							int[] datas = usedModele.getPopsNumbers();
							String[] names = usedModele.getPopsName();
							System.out.println("Jour "+i+" - ");
							for(int j=0; j<datas.length; j++) {
								System.out.print(names[j]+" - "+ datas[j]+" - ");
							}
							System.out.print("\n");
						}
						form = "Voulez vous:\n 1 - Continuer la simulation ?\n 2 - Recommencer la simulation ? \n 3 - Quitter ?\n";
						choiceContinue = getIntInputBetween(1, 3, form);
						if(choiceContinue ==2) {
							usedModele = usedModele.reinit();
						}
					}
				}
			}
			else if(choix == 2) {
				changeParameters();
			}
		}
		System.exit(0);
	}
	private static int home() {
		
		String forme= "Accueil\n 1 - Simulation\n 2 - Modifier les paramètres de simulation\n 3 - Quitter\n";
		return getIntInputBetween(1, 3, forme);
	}
	private static Modele homeSimulation() {
		String form = "Simulation\n 1 - Simulation SIR\n 2 - Simulation SEIR\n 3 - Retour";
		int resUser = getIntInputBetween(1, 3, form);
		Modele resModele = null;
		if(resUser==1) {
			resModele = new ModeleSIR();
		}
		else if(resUser==2) {
			resModele = new ModeleSEIR();
		}
		return resModele;
	}
	private static void regenerateFile() {
		try {
			param.regenererFichier("param.txt");
			System.out.println("Opération réussie");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("L'opération n'a pas pu être effectuée... Un problème imprévu est survenu");
		}
	}
	
	private static void changeParameters() {
		String form = "Voulez-vous:\n 1 - Modifier un ou plusieurs paramètres ?\n 2 - Modifier tous les paramètres\n 3 - Enregistrer les paramètres dans le fichier\n 4 - Terminer";
		int choix = getIntInputBetween(1, 3, form);
		while(choix!=4) {
			if(choix == 1) {
				choix = 0;
				int numMax = param.getNumberOfParameters()+1;
				while(choix!=numMax) {
					form = param.toString()+"\n"+numMax+" - Quitter";
					choix = getIntInputBetween(1, param.getNumberOfParameters()+1, form);
					if(choix<=param.getNumberOfParameters()) {
						changeParameter(choix-1);
					}
				}
			}
			else if(choix == 2) {
				for(int i=0; i<param.getNumberOfParameters(); i++) {
					changeParameter(i);
				}
			}
			else if(choix==3) {
				regenerateFile();
				param.setParametresAvecFichier("param.txt");
			}
		}
	}
	private static void changeParameter(int index) {
		boolean paramChanged = false;
		while(!paramChanged) {
			System.out.println("Veuillez entrer la valeur que vous voulez entrer pour " + param.getKeyAtIndex(index));
			String choosenValue="";

			choosenValue=scan.nextLine();

			try {
				param.setParam(index, choosenValue);
				paramChanged = true;
			}
			catch(ParamException e) {
				e.printStackTrace();
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		}
	}
	private static int getIntInputBetween(int a, int b, String form) {
		int res = 0;
		while(res<a || res>b) {
			System.out.print(form);
			try {
				if(scan.hasNextInt()) {
					res = scan.nextInt();
					if(res<a || res>b) {
						System.out.println("Le chiffre "+res+" ne correspond pas à un choix parmi ceux proposés");
					}
				}
				else {
					System.out.println("Vous devez entrer un chiffre correspondant au choix souhaité");
				}
				scan.nextLine();
			}
			catch(Exception e) {
				System.out.println("Il y a eu un problème, veuillez réessayer");
			}
		}
		return res;
	}
	
}
